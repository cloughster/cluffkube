- name: Get Kubelet binaries
  ansible.builtin.shell: >
    set -o errexit; \
    set -o pipefail; \
    wget -q --https-only --timestamping \
      "https://storage.googleapis.com/kubernetes-release/release/{{ k8s_version }}/bin/linux/amd64/kubelet"
  args:
    executable: "/bin/bash"
    chdir: "/tmp"

- name: Copy the file to a new location
  ansible.builtin.copy:
    src: /tmp/kubelet
    dest: /usr/local/bin/kubelet
    owner: root
    group: root
    mode: '0755'
    remote_src: yes

- name: Copy Worker certs
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /var/lib/kubelet/
    owner: root
    group: root
    mode: '0755'
  loop: 
    - "{{ cert_conf }}/{{ inventory_hostname }}.pem"
    - "{{ cert_conf }}/{{ inventory_hostname }}-key.pem"

- name: Copy Worker Kubeconfig
  ansible.builtin.copy:
    src: "{{ cert_conf }}/{{ inventory_hostname }}.kubeconfig"
    dest: /var/lib/kubelet/kubeconfig
    owner: root
    group: root
    mode: '0755'

- name: Create Kubelet config file
  ansible.builtin.template:
    src: "kubelet-config.yaml.j2"
    dest: "/var/lib/kubelet/kubelet-config.yaml"
#      owner: "{{ k8s_ca_certificate_owner }}"
#      group: "{{ k8s_ca_certificate_group }}"
#

- name: Create Kubelet service file
  ansible.builtin.template:
    src: "kubelet.service.j2"
    dest: "/etc/systemd/system/kubelet.service"
#      owner: "{{ k8s_ca_certificate_owner }}"
#      group: "{{ k8s_ca_certificate_group }}"
#      mode: "{{ k8s_ca_file_perm }}"

- name: Configure kubelet systemctl
  ansible.builtin.systemd_service:
    name: kubelet
    state: started
    enabled:  true
  register: updated_sysctl

- name: systemcyl daemon_reload
  ansible.builtin.systemd_service:
    daemon_reload: true
  when: updated_sysctl.changed
