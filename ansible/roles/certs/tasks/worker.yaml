

- name: Create KubeProxy Configuration file
  ansible.builtin.template:
    src: "kube-proxy-csr.json.j2"
    dest: "{{ cert_conf }}/kube-proxy-csr.json"
    #    owner: "{{ k8s_ca_certificate_owner }}"
    #    group: "{{ k8s_ca_certificate_group }}"
    #    mode: "{{ k8s_ca_file_perm }}"

- name: Create Kubeproxy Key Pair
  ansible.builtin.shell: >
    set -o errexit; \
    set -o pipefail; \
    /usr/local/bin/cfssl gencert \
    -ca=ca.pem \
    -ca-key=ca-key.pem \
    -config=ca-config.json \
    -profile=kubernetes \
     kube-proxy-csr.json | /usr/local/bin/cfssljson -bare kube-proxy
  args:
    executable: "/bin/bash"
    chdir: "{{ cert_conf }}"
    creates: "kube-proxy-key.pem"
  tags:
    - kubernetes-ca
    - kubernetes-ca-etcd

- name: Create worker Node Cert configuration file
  ansible.builtin.template:
    src: "kubelet-csr.json.j2"
    dest: "{{ cert_conf }}/{{item}}-csr.json"
    #    owner: "{{ k8s_ca_certificate_owner }}"
    #    group: "{{ k8s_ca_certificate_group }}"
    #    mode: "{{ k8s_ca_file_perm }}"
  with_items: 
     - "{{ groups['workers'] }}"

- name: Create Worker Node  Key Pairs
  ansible.builtin.shell: >
    set -o errexit; \
    set -o pipefail; \
    /usr/local/bin/cfssl gencert \
    -ca=ca.pem \
    -ca-key=ca-key.pem \
    -config=ca-config.json \
    -hostname={{ item }},{{ hostvars[item].ansible_host }} \
    -profile=kubernetes \
     {{ item }}-csr.json | /usr/local/bin/cfssljson -bare {{ item }}
  args:
    executable: "/bin/bash"
    chdir: "{{ cert_conf }}"
    creates: "{{ item }}-key.pem"
  with_items:
    - "{{ groups['workers'] }}"    
  tags:
    - kubernetes-ca
    - kubernetes-ca-etcd
